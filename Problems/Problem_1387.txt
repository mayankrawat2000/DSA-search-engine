Ringo found a string ss of length nn in his yellow submarine. The string contains only lowercase letters from the English alphabet. As Ringo and his friends love palindromes, he would like to turn the string ss into a palindrome by applying two types of operations to the string. 
The first operation allows him to choose ii (2≤i≤n−12≤i≤n−1) and to append the substring s2s3…sis2s3…si (i−1i−1 characters) reversed to the front of ss.
The second operation allows him to choose ii (2≤i≤n−12≤i≤n−1) and to append the substring sisi+1…sn−1sisi+1…sn−1 (n−in−i characters) reversed to the end of ss.
Note that characters in the string in this problem are indexed from 11.
For example suppose s=s=abcdef. If he performs the first operation with i=3i=3 then he appends cb to the front of ss and the result will be cbabcdef. Performing the second operation on the resulted string with i=5i=5 will yield cbabcdefedc.
Your task is to help Ringo make the entire string a palindrome by applying any of the two operations (in total) at most 3030 times. The length of the resulting palindrome must not exceed 106106
It is guaranteed that under these constraints there always is a solution. Also note you do not have to minimize neither the number of operations applied, nor the length of the resulting string, but they have to fit into the constraints.
