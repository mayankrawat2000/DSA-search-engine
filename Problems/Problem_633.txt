 Frodo was caught by Saruman. He tore a pouch from Frodo's neck, shook out its contents —there was a pile of different rings: gold and silver..."How am I to tell which is the One?!" the mage howled."Throw them one by one into the Cracks of Doom and watch when Mordor falls!" 
Somewhere in a parallel Middle-earth, when Saruman caught Frodo, he only found nn rings. And the ii-th ring was either gold or silver. For convenience Saruman wrote down a binary string ss of nn characters, where the ii-th character was 0 if the ii-th ring was gold, and 1 if it was silver.
Saruman has a magic function ff, which takes a binary string and returns a number obtained by converting the string into a binary number and then converting the binary number into a decimal number. For example, f(001010)=10,f(111)=7,f(11011101)=221f(001010)=10,f(111)=7,f(11011101)=221.
Saruman, however, thinks that the order of the rings plays some important role. He wants to find 22 pairs of integers (l1,r1),(l2,r2)(l1,r1),(l2,r2), such that:
 1≤l1≤n1≤l1≤n, 1≤r1≤n1≤r1≤n, r1−l1+1≥⌊n2⌋r1−l1+1≥⌊n2⌋  1≤l2≤n1≤l2≤n, 1≤r2≤n1≤r2≤n, r2−l2+1≥⌊n2⌋r2−l2+1≥⌊n2⌋  Pairs (l1,r1)(l1,r1) and (l2,r2)(l2,r2) are distinct. That is, at least one of l1≠l2l1≠l2 and r1≠r2r1≠r2 must hold. Let tt be the substring s[l1:r1]s[l1:r1] of ss, and ww be the substring s[l2:r2]s[l2:r2] of ss. Then there exists non-negative integer kk, such that f(t)=f(w)⋅kf(t)=f(w)⋅k.
Here substring s[l:r]s[l:r] denotes slsl+1…sr−1srslsl+1…sr−1sr, and ⌊x⌋⌊x⌋ denotes rounding the number down to the nearest integer.
Help Saruman solve this problem! It is guaranteed that under the constraints of the problem at least one solution exists.
