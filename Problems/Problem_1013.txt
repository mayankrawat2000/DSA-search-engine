You are given a directed graph consisting of nn vertices. Each directed edge (or arc) labeled with a single character. Initially, the graph is empty.
You should process mm queries with it. Each query is one of three types: 
  "++ uu vv cc" — add arc from uu to vv with label cc. It's guaranteed that there is no arc (u,v)(u,v) in the graph at this moment;  "−− uu vv" — erase arc from uu to vv. It's guaranteed that the graph contains arc (u,v)(u,v) at this moment;  "?? kk" — find the sequence of kk vertices v1,v2,…,vkv1,v2,…,vk such that there exist both routes v1→v2→⋯→vkv1→v2→⋯→vk and vk→vk−1→⋯→v1vk→vk−1→⋯→v1 and if you write down characters along both routes you'll get the same string. You can visit the same vertices any number of times. 
