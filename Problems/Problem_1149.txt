Let's call two strings aa and bb (both of length kk) a bit similar if they have the same character in some position, i. e. there exists at least one i∈[1,k]i∈[1,k] such that ai=biai=bi.
You are given a binary string ss of length nn (a string of nn characters 0 and/or 1) and an integer kk. Let's denote the string s[i..j]s[i..j] as the substring of ss starting from the ii-th character and ending with the jj-th character (that is, s[i..j]=sisi+1si+2…sj−1sjs[i..j]=sisi+1si+2…sj−1sj).
Let's call a binary string tt of length kk beautiful if it is a bit similar to all substrings of ss having length exactly kk; that is, it is a bit similar to s[1..k],s[2..k+1],…,s[n−k+1..n]s[1..k],s[2..k+1],…,s[n−k+1..n].
Your goal is to find the lexicographically smallest string tt that is beautiful, or report that no such string exists. String xx is lexicographically less than string yy if either xx is a prefix of yy (and x≠yx≠y), or there exists such ii (1≤i≤min(|x|,|y|)1≤i≤min(|x|,|y|)), that xi<yixi<yi, and for any jj (1≤j<i1≤j<i) xj=yjxj=yj.
