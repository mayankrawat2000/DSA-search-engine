This is an interactive problem.
Ayush devised a new scheme to set the password of his lock. The lock has kk slots where each slot can hold integers from 11 to nn. The password PP is a sequence of kk integers each in the range [1,n][1,n], ii-th element of which goes into the ii-th slot of the lock.
To set the password of his lock, Ayush comes up with an array AA of nn integers each in the range [1,n][1,n] (not necessarily distinct). He then picks kk non-empty mutually disjoint subsets of indices S1,S2,...,SkS1,S2,...,Sk (Si∩i≠jSj=∅)(Si∩i≠jSj=∅) and sets his password as Pi=maxj∉SiA[j]Pi=maxj∉SiA[j]. In other words, the ii-th integer in the password is equal to the maximum over all elements of AA whose indices do not belong to SiSi.
You are given the subsets of indices chosen by Ayush. You need to guess the password. To make a query, you can choose a non-empty subset of indices of the array and ask the maximum of all elements of the array with index in this subset. You can ask no more than 12 queries.
