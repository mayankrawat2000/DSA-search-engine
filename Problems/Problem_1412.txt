Another dull quarantine day was going by when BThero decided to start researching matrices of size n×mn×m. The rows are numerated 11 through nn from top to bottom, and the columns are numerated 11 through mm from left to right. The cell in the ii-th row and jj-th column is denoted as (i,j)(i,j).
For each cell (i,j)(i,j) BThero had two values: 
  The cost of the cell, which is a single positive integer.  The direction of the cell, which is one of characters L, R, D, U. Those characters correspond to transitions to adjacent cells (i,j−1)(i,j−1), (i,j+1)(i,j+1), (i+1,j)(i+1,j) or (i−1,j)(i−1,j), respectively. No transition pointed outside of the matrix. 
Let us call a cell (i2,j2)(i2,j2) reachable from (i1,j1)(i1,j1), if, starting from (i1,j1)(i1,j1) and repeatedly moving to the adjacent cell according to our current direction, we will, sooner or later, visit (i2,j2)(i2,j2). 
BThero decided to create another matrix from the existing two. For a cell (i,j)(i,j), let us denote Si,jSi,j as a set of all reachable cells from it (including (i,j)(i,j) itself). Then, the value at the cell (i,j)(i,j) in the new matrix will be equal to the sum of costs of all cells in Si,jSi,j. 
After quickly computing the new matrix, BThero immediately sent it to his friends. However, he did not save any of the initial matrices! Help him to restore any two valid matrices, which produce the current one.
