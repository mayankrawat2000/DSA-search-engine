Suppose you had an array AA of nn elements, each of which is 00 or 11.
Let us define a function f(k,A)f(k,A) which returns another array BB, the result of sorting the first kk elements of AA in non-decreasing order. For example, f(4,[0,1,1,0,0,1,0])=[0,0,1,1,0,1,0]f(4,[0,1,1,0,0,1,0])=[0,0,1,1,0,1,0]. Note that the first 44 elements were sorted.
Now consider the arrays B1,B2,…,BnB1,B2,…,Bn generated by f(1,A),f(2,A),…,f(n,A)f(1,A),f(2,A),…,f(n,A). Let CC be the array obtained by taking the element-wise sum of B1,B2,…,BnB1,B2,…,Bn.
For example, let A=[0,1,0,1]A=[0,1,0,1]. Then we have B1=[0,1,0,1]B1=[0,1,0,1], B2=[0,1,0,1]B2=[0,1,0,1], B3=[0,0,1,1]B3=[0,0,1,1], B4=[0,0,1,1]B4=[0,0,1,1]. Then C=B1+B2+B3+B4=[0,1,0,1]+[0,1,0,1]+[0,0,1,1]+[0,0,1,1]=[0,2,2,4]C=B1+B2+B3+B4=[0,1,0,1]+[0,1,0,1]+[0,0,1,1]+[0,0,1,1]=[0,2,2,4].
You are given CC. Determine a binary array AA that would give CC when processed as above. It is guaranteed that an array AA exists for given CC in the input. 
