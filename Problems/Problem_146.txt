You are given a binary string of length nn. You have exactly kk moves. In one move, you must select a single bit. The state of all bits except that bit will get flipped (00 becomes 11, 11 becomes 00). You need to output the lexicographically largest string that you can get after using all kk moves. Also, output the number of times you will select each bit. If there are multiple ways to do this, you may output any of them.
A binary string aa is lexicographically larger than a binary string bb of the same length, if and only if the following holds: 
  in the first position where aa and bb differ, the string aa contains a 11, and the string bb contains a 00. 
