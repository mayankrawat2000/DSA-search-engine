You are given a sequence aa, initially consisting of nn integers.
You want to transform this sequence so that all elements in it are equal (i. e. it contains several occurrences of the same element).
To achieve this, you choose some integer xx that occurs at least once in aa, and then perform the following operation any number of times (possibly zero): choose some segment [l,r][l,r] of the sequence and remove it. But there is one exception: you are not allowed to choose a segment that contains xx. More formally, you choose some contiguous subsequence [al,al+1,…,ar][al,al+1,…,ar] such that ai≠xai≠x if l≤i≤rl≤i≤r, and remove it. After removal, the numbering of elements to the right of the removed segment changes: the element that was the (r+1)(r+1)-th is now ll-th, the element that was (r+2)(r+2)-th is now (l+1)(l+1)-th, and so on (i. e. the remaining sequence just collapses).
Note that you can not change xx after you chose it.
For example, suppose n=6n=6, a=[1,3,2,4,1,2]a=[1,3,2,4,1,2]. Then one of the ways to transform it in two operations is to choose x=1x=1, then:
  choose l=2l=2, r=4r=4, so the resulting sequence is a=[1,1,2]a=[1,1,2];  choose l=3l=3, r=3r=3, so the resulting sequence is a=[1,1]a=[1,1]. 
Note that choosing xx is not an operation. Also, note that you can not remove any occurrence of xx.
Your task is to find the minimum number of operations required to transform the sequence in a way described above.
You have to answer tt independent test cases.
