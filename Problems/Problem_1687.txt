Johnny has a new toy. As you may guess, it is a little bit extraordinary. The toy is a permutation PP of numbers from 11 to nn, written in one row next to each other. 
For each ii from 11 to n−1n−1 between PiPi and Pi+1Pi+1 there is a weight WiWi written, and those weights form a permutation of numbers from 11 to n−1n−1. There are also extra weights W0=Wn=0W0=Wn=0.
The instruction defines subsegment [L,R][L,R] as good if WL−1<WiWL−1<Wi and WR<WiWR<Wi for any ii in {L,L+1,…,R−1}{L,L+1,…,R−1}. For such subsegment it also defines WMWM as minimum of set {WL,WL+1,…,WR−1}{WL,WL+1,…,WR−1}. 
Now the fun begins. In one move, the player can choose one of the good subsegments, cut it into [L,M][L,M] and [M+1,R][M+1,R] and swap the two parts. More precisely, before one move the chosen subsegment of our toy looks like: WL−1,PL,WL,…,WM−1,PM,WM,PM+1,WM+1,…,WR−1,PR,WRWL−1,PL,WL,…,WM−1,PM,WM,PM+1,WM+1,…,WR−1,PR,WR and afterwards it looks like this: WL−1,PM+1,WM+1,…,WR−1,PR,WM,PL,WL,…,WM−1,PM,WRWL−1,PM+1,WM+1,…,WR−1,PR,WM,PL,WL,…,WM−1,PM,WR Such a move can be performed multiple times (possibly zero), and the goal is to achieve the minimum number of inversions in PP. 
Johnny's younger sister Megan thinks that the rules are too complicated, so she wants to test her brother by choosing some pair of indices XX and YY, and swapping PXPX and PYPY (XX might be equal YY). After each sister's swap, Johnny wonders, what is the minimal number of inversions that he can achieve, starting with current PP and making legal moves?
You can assume that the input is generated randomly. PP and WW were chosen independently and equiprobably over all permutations; also, Megan's requests were chosen independently and equiprobably over all pairs of indices.
