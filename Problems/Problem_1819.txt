 Denis came to Nastya and discovered that she was not happy to see him... There is only one chance that she can become happy. Denis wants to buy all things that Nastya likes so she will certainly agree to talk to him. 
The map of the city where they live has a lot of squares, some of which are connected by roads. There is exactly one way between each pair of squares which does not visit any vertex twice. It turns out that the graph of the city is a tree.
Denis is located at vertex 11 at the time 00. He wants to visit every vertex at least once and get back as soon as possible.
Denis can walk one road in 11 time. Unfortunately, the city is so large that it will take a very long time to visit all squares. Therefore, Denis took a desperate step. He pulled out his pocket time machine, which he constructed in his basement. With its help, Denis can change the time to any non-negative time, which is less than the current time.
But the time machine has one feature. If the hero finds himself in the same place and at the same time twice, there will be an explosion of universal proportions and Nastya will stay unhappy. Therefore, Denis asks you to find him a route using a time machine that he will get around all squares and will return to the first and at the same time the maximum time in which he visited any square will be minimal.
Formally, Denis's route can be represented as a sequence of pairs: {v1,t1},{v2,t2},{v3,t3},…,{vk,tk}{v1,t1},{v2,t2},{v3,t3},…,{vk,tk}, where vivi is number of square, and titi is time in which the boy is now.
The following conditions must be met:
  The route starts on square 11 at time 00, i.e. v1=1,t1=0v1=1,t1=0 and ends on the square 11, i.e. vk=1vk=1.  All transitions are divided into two types:   Being in the square change the time: {vi,ti}→{vi+1,ti+1}:vi+1=vi,0≤ti+1<ti{vi,ti}→{vi+1,ti+1}:vi+1=vi,0≤ti+1<ti.  Walk along one of the roads: {vi,ti}→{vi+1,ti+1}{vi,ti}→{vi+1,ti+1}. Herewith, vivi and vi+1vi+1 are connected by road, and ti+1=ti+1ti+1=ti+1   All pairs {vi,ti}{vi,ti} must be different.  All squares are among v1,v2,…,vkv1,v2,…,vk. 
You need to find a route such that the maximum time in any square will be minimal, that is, the route for which max(t1,t2,…,tk)max(t1,t2,…,tk) will be the minimum possible.
