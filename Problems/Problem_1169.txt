There are nn cells, numbered 1,2,…,n1,2,…,n from left to right. You have to place a robot at any cell initially. The robot must make exactly kk moves.
In one move, the robot must move one cell to the left or right, provided that it doesn't move out of bounds. In other words, if the robot was in the cell ii, it must move to either the cell i−1i−1 or the cell i+1i+1, as long as it lies between 11 and nn (endpoints inclusive). The cells, in the order they are visited (including the cell the robot is placed), together make a good path.
Each cell ii has a value aiai associated with it. Let c0,c1,…,ckc0,c1,…,ck be the sequence of cells in a good path in the order they are visited (c0c0 is the cell robot is initially placed, c1c1 is the cell where the robot is after its first move, and so on; more formally, cici is the cell that the robot is at after ii moves). Then the value of the path is calculated as ac0+ac1+⋯+ackac0+ac1+⋯+ack.
Your task is to calculate the sum of values over all possible good paths. Since this number can be very large, output it modulo 109+7109+7. Two good paths are considered different if the starting cell differs or there exists an integer i∈[1,k]i∈[1,k] such that the current cell of the robot after exactly ii moves is different in those paths.
You must process qq updates to aa and print the updated sum each time. Each update changes the value of exactly one cell. See the input format and the sample input-output for more details.
