That's right. I'm a Purdue student, and I shamelessly wrote a problem about trains.
There are nn stations and mm trains. The stations are connected by n−1n−1 one-directional railroads that form a tree rooted at station 11. All railroads are pointed in the direction from the root station 11 to the leaves. A railroad connects a station uu to a station vv, and has a distance dd, meaning it takes dd time to travel from uu to vv. Each station with at least one outgoing railroad has a switch that determines the child station an incoming train will be directed toward. For example, it might look like this:
  Here, stations 11 and 33 have switches directed toward stations 22 and 44, respectively. 
Initially, no trains are at any station. Train ii will enter station 11 at time titi. Every unit of time, starting at time 11, the following two steps happen:
  You can switch at most one station to point to a different child station. A switch change takes effect before step 22.  For every train that is on a station uu, it is directed toward the station vv indicated by uu's switch. So, if the railroad from uu to vv has distance dd, the train will enter station vv in dd units of time from now. 
Every train has a destination station sisi. When it enters sisi, it will stop there permanently. If at some point the train is going in the wrong direction, so that it will never be able to reach sisi no matter where the switches point, it will immediately explode.
Find the latest possible time of the first explosion if you change switches optimally, or determine that you can direct every train to its destination so that no explosion occurs. Also, find the minimum number of times you need to change a switch to achieve this.
