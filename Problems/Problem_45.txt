This is an interactive problem.
A city has n2n2 buildings divided into a grid of nn rows and nn columns. You need to build a road of some length D(A,B)D(A,B) of your choice between each pair of adjacent by side buildings AA and BB. Due to budget limitations and legal restrictions, the length of each road must be a positive integer and the total length of all roads should not exceed 4800048000.
There is a thief in the city who will start from the topmost, leftmost building (in the first row and the first column) and roam around the city, occasionally stealing artifacts from some of the buildings. He can move from one building to another adjacent building by travelling through the road which connects them.
You are unable to track down what buildings he visits and what path he follows to reach them. But there is one tracking mechanism in the city. The tracker is capable of storing a single integer xx which is initially 00. Each time the thief travels from a building AA to another adjacent building BB through a road of length D(A,B)D(A,B), the tracker changes xx to x⊕D(A,B)x⊕D(A,B). Each time the thief steals from a building, the tracker reports the value xx stored in it and resets it back to 00.
It is known beforehand that the thief will steal in exactly kk buildings but you will know the values returned by the tracker only after the thefts actually happen. Your task is to choose the lengths of roads in such a way that no matter what strategy or routes the thief follows, you will be able to exactly tell the location of all the buildings where the thefts occurred from the values returned by the tracker.
