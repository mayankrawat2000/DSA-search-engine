You're given an array of nn integers between 00 and nn inclusive.
In one operation, you can choose any element of the array and replace it by the MEX of the elements of the array (which may change after the operation).
For example, if the current array is [0,2,2,1,4][0,2,2,1,4], you can choose the second element and replace it by the MEX of the present elements  — 33. Array will become [0,3,2,1,4][0,3,2,1,4].
You must make the array non-decreasing, using at most 2n2n operations.
It can be proven that it is always possible. Please note that you do not have to minimize the number of operations. If there are many solutions, you can print any of them.
 –
An array b[1…n]b[1…n] is non-decreasing if and only if b1≤b2≤…≤bnb1≤b2≤…≤bn.
The MEX (minimum excluded) of an array is the smallest non-negative integer that does not belong to the array. For instance:
  The MEX of [2,2,1][2,2,1] is 00, because 00 does not belong to the array.  The MEX of [3,1,0,1][3,1,0,1] is 22, because 00 and 11 belong to the array, but 22 does not.  The MEX of [0,3,1,2][0,3,1,2] is 44 because 00, 11, 22 and 33 belong to the array, but 44 does not. 
It's worth mentioning that the MEX of an array of length nn is always between 00 and nn inclusive.
